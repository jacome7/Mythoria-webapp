import { getRequestConfig } from 'next-intl/server';
import { routing } from './routing';

export default getRequestConfig(async ({ requestLocale }) => {
  // This typically corresponds to the `[locale]` segment
  let locale = await requestLocale;
  // Ensure that a valid locale is used
  if (!locale || !routing.locales.includes(locale as (typeof routing.locales)[number])) {
    locale = routing.defaultLocale;
  }
  // Load and merge messages from different domain files
  const [
    headerMessages,
    footerMessages,
    stepNavigationMessages,
    shareMessages,
    authMessages,
    actionsMessages,
    altTextsMessages,
    loadingMessages,
    errorsMessages,
    shareModalMessages,
    creditsDisplayMessages,
    storyReaderMessages,
    notFoundMessages,
    voicesMessages,
    listenStoryMessages,
    creditConfirmationMessages,
    imageEditingTabMessages,
    storyCounterMessages,
    storyGenerationProgressMessages,
    storyRatingMessages,
    aiEditModalMessages,
    aboutUsMessages,
    homePageMessages,
    myStoriesPageMessages,
    myCharactersPageMessages,
    signInPageMessages,
    signUpPageMessages,
    tellYourStoryPageMessages,
    buyCreditsPageMessages,
    revolutPaymentMessages,
    publicStoryPageMessages,
    publicStoryChapterMessages,
    storyEditPageMessages,
    charactersMessages,
    deleteAccountMessages,
    editorMessages,
    metadataMessages,
    sharedStoryPageMessages,
    getInspiredPageMessages,
    blogMessages,
    blogPostMessages,
    printOrderMessages,
    addressesMessages,
    pricingPageMessages,
    privacyPolicyMessages,
    storyStepsMessages,
    partnersMessages,
  ] = await Promise.all([
    import(`../messages/${locale}/Header.json`).then((module) => module.default),
    import(`../messages/${locale}/Footer.json`).then((module) => module.default),
    import(`../messages/${locale}/StepNavigation.json`).then((module) => module.default),
    import(`../messages/${locale}/Share.json`).then((module) => module.default),
    import(`../messages/${locale}/Auth.json`).then((module) => module.default),
    import(`../messages/${locale}/Actions.json`).then((module) => module.default),
    import(`../messages/${locale}/AltTexts.json`).then((module) => module.default),
    import(`../messages/${locale}/Loading.json`).then((module) => module.default),
    import(`../messages/${locale}/Errors.json`).then((module) => module.default),
    import(`../messages/${locale}/ShareModal.json`).then((module) => module.default),
    import(`../messages/${locale}/CreditsDisplay.json`).then((module) => module.default),
    import(`../messages/${locale}/StoryReader.json`).then((module) => module.default),
    import(`../messages/${locale}/NotFound.json`).then((module) => module.default),
    import(`../messages/${locale}/Voices.json`).then((module) => module.default),
    import(`../messages/${locale}/ListenStory.json`).then((module) => module.default),
    import(`../messages/${locale}/CreditConfirmation.json`).then((module) => module.default),
    import(`../messages/${locale}/ImageEditingTab.json`).then((module) => module.default),
    import(`../messages/${locale}/StoryCounter.json`).then((module) => module.default),
    import(`../messages/${locale}/StoryGenerationProgress.json`).then((module) => module.default),
    import(`../messages/${locale}/StoryRating.json`).then((module) => module.default),
    import(`../messages/${locale}/AIEditModal.json`).then((module) => module.default),
    import(`../messages/${locale}/AboutUs.json`).then((module) => module.default),
    import(`../messages/${locale}/HomePage.json`).then((module) => module.default),
    import(`../messages/${locale}/MyStoriesPage.json`).then((module) => module.default),
    import(`../messages/${locale}/MyCharactersPage.json`).then((module) => module.default),
    import(`../messages/${locale}/SignInPage.json`).then((module) => module.default),
    import(`../messages/${locale}/SignUpPage.json`).then((module) => module.default),
    import(`../messages/${locale}/TellYourStoryPage.json`).then((module) => module.default),
    import(`../messages/${locale}/BuyCreditsPage.json`).then((module) => module.default),
    import(`../messages/${locale}/RevolutPayment.json`).then((module) => module.default),
    import(`../messages/${locale}/PublicStoryPage.json`).then((module) => module.default),
    import(`../messages/${locale}/PublicStoryChapter.json`).then((module) => module.default),
    import(`../messages/${locale}/StoryEditPage.json`).then((module) => module.default),
    import(`../messages/${locale}/Characters.json`).then((module) => module.default),
    import(`../messages/${locale}/DeleteAccount.json`).then((module) => module.default),
    import(`../messages/${locale}/Editor.json`).then((module) => module.default),
    import(`../messages/${locale}/Metadata.json`).then((module) => module.default),
    import(`../messages/${locale}/SharedStoryPage.json`).then((module) => module.default),
    import(`../messages/${locale}/GetInspiredPage.json`).then((module) => module.default),
    import(`../messages/${locale}/Blog.json`).then((module) => module.default),
    import(`../messages/${locale}/BlogPost.json`).then((module) => module.default),
    import(`../messages/${locale}/PrintOrder.json`).then((module) => module.default),
    import(`../messages/${locale}/Addresses.json`).then((module) => module.default),
    import(`../messages/${locale}/PricingPage.json`).then((module) => module.default),
    import(`../messages/${locale}/PrivacyPolicy.json`).then((module) => module.default),
    import(`../messages/${locale}/StorySteps.json`).then((module) => module.default),
    import(`../messages/${locale}/Partners.json`).then((module) => module.default),
  ]);

  // Ensure each domain is properly namespaced. Some JSON files are flat (e.g., {"title": ...})
  // while others already include a top-level namespace key (e.g., {"Header": {...}}).
  // This helper wraps flat objects under the expected namespace without double-wrapping.
  const ns = (obj: Record<string, unknown>, namespace: string) =>
    obj && Object.prototype.hasOwnProperty.call(obj, namespace)
      ? obj
      : ({ [namespace]: obj } as Record<string, unknown>);

  return {
    locale: locale as string,
    messages: {
      ...ns(headerMessages, 'Header'),
      ...ns(footerMessages, 'Footer'),
      ...ns(stepNavigationMessages, 'StepNavigation'),
      ...ns(shareMessages, 'Share'),
      ...ns(authMessages, 'Auth'),
      ...ns(actionsMessages, 'Actions'),
      ...ns(altTextsMessages, 'AltTexts'),
      ...ns(loadingMessages, 'Loading'),
      ...ns(errorsMessages, 'Errors'),
      ...ns(shareModalMessages, 'ShareModal'),
      ...ns(creditsDisplayMessages, 'CreditsDisplay'),
      ...ns(storyReaderMessages, 'StoryReader'),
      ...ns(notFoundMessages, 'NotFound'),
      ...ns(voicesMessages, 'Voices'),
      ...ns(listenStoryMessages, 'ListenStory'),
      ...ns(creditConfirmationMessages, 'CreditConfirmation'),
      ...ns(imageEditingTabMessages, 'ImageEditingTab'),
      ...ns(storyCounterMessages, 'StoryCounter'),
      ...ns(storyGenerationProgressMessages, 'StoryGenerationProgress'),
      ...ns(storyRatingMessages, 'StoryRating'),
      ...ns(aiEditModalMessages, 'AIEditModal'),
      ...ns(aboutUsMessages, 'AboutUs'),
      ...ns(homePageMessages, 'HomePage'),
      ...ns(myStoriesPageMessages, 'MyStoriesPage'),
      ...ns(myCharactersPageMessages, 'MyCharactersPage'),
      ...ns(signInPageMessages, 'SignInPage'),
      ...ns(signUpPageMessages, 'SignUpPage'),
      ...ns(tellYourStoryPageMessages, 'TellYourStoryPage'),
      ...ns(buyCreditsPageMessages, 'BuyCreditsPage'),
      ...ns(revolutPaymentMessages, 'RevolutPayment'),
      ...ns(publicStoryPageMessages, 'PublicStoryPage'),
      ...ns(publicStoryChapterMessages, 'PublicStoryChapter'),
      ...ns(storyEditPageMessages, 'StoryEditPage'),
      ...ns(charactersMessages, 'Characters'),
      ...ns(deleteAccountMessages, 'DeleteAccount'),
      ...ns(editorMessages, 'Editor'),
      ...ns(metadataMessages, 'Metadata'),
      ...ns(sharedStoryPageMessages, 'SharedStoryPage'),
      ...ns(getInspiredPageMessages, 'GetInspiredPage'),
      ...ns(blogMessages, 'Blog'),
      ...ns(blogPostMessages, 'BlogPost'),
      ...ns(printOrderMessages, 'PrintOrder'),
      ...ns(addressesMessages, 'Addresses'),
      ...ns(pricingPageMessages, 'PricingPage'),
      ...ns(privacyPolicyMessages, 'PrivacyPolicy'),
      ...ns(storyStepsMessages, 'StorySteps'),
      ...ns(partnersMessages, 'Partners'),
    },
  };
});
